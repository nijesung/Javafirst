// *IP주소 확인
// [Finder] - [응용프로그램] - [터미널]를 실행하고 ifconfig

// *IP 변경
// [Finder] - [응용프로그램] - [시스템 환경 설정]을 실행하고 네트워크를 클릭
// [고급]을 선택하고 IP 주소 설정
// 라우터 주소를 192.168.0.1로 설정

// DNS를 168.126.63.1로 설정 => 이 설정을 하지 않으면 인터넷이 되지 않는다.

// *공유 폴더 접근
// [Finder]를 실행하고 이동 메뉴를 누르고 서버에 연결을 선택
// smb://192.168.0.200 이라고 입력하고 접속
// 컴퓨터가 여러 개 보이면 503-	main 컴퓨터에 접속하면 된다.

// *자바 설치
// =>www.oracle.com에 접속해서 MAC용 JDK를 다운로드 받아서 설치
// =>설치 확인: 터미널에서 java -version(JVM 버전 확인), javac -version(JDK 확인) 명령을 이용해서 확인

// *Eclipse 설치
// =>www.eclipse.org 에서 다운로드

// *웹 서버의 역할을 해줄 프로그램을 설치
// tomcat.apache.org에서 다운로드

// *Web Front End IDE(작성하고 실행하는 프로그램)
// braket, atom, aptana 등에서 가능
// eclipse에서 가능한데 eclipse는 웹 서버 역할을 수행해주는 프로그램을 설치해야만 웹 프로그래밍이 가능하다.
// 이 역할을 수행해주는 대표적인 프로그램이 Tomcat 이다.
// eclipse를 제외한 IDE를 사용하면 Tomcat을 설치할 필요가 없다.

// # 톰캣은 한 번에 하나만 실행 가능하다.
//   톰캣이 다른 곳에서 구동 중이면 이클립스 에서는 구동하지 못한다.
//   이클립스에서 구동하고 싶으면 톰캣 실행을 중지시켜야 한다.
//   중지시키는 명령을 수행하는 파일이 shutdown.sh(sh 는 유닉스 명령어 배치 파일)
//   윈도우 에선 shutdown.bat(bat 은 윈도우 명령어 배치 파일)

// **form
// 사용자의 입력을 받아서 서버에게 전달할 목적으로 만드는 개체
// form 의 속성
// action: 전송될 서버의 URL 인데 생략하면 현재 URL 로 전송
// Method: 전송 방식이며 get 아니면 post 이다. 생략하면 get 이다.
// enctype: 폼의 데이터를 전송하는 방법이며 폼에 첨부파일이 있을 때는 반드시 multipart/form-data 로 설정 해주어야 한다.

// 전송방식(요청방식)
// 1. get
//    클라이언트의 파라미터를 주소 뒤에 붙여서 전송하는 방식
//    클라이언트가 넘겨주는 데이터가 URL 에서 확인이 가능하다.
//    보안이 취약하고 넘겨줄 수 있는 데이터의 크기에 제한이 있다.
//    자동 재전송이 가능하고 post	보다는 빠르다.

// 2. post
//    클라이언트의 파라미터를 헤더에 숨겨서 전송하는 방식
//    클라이언트가 넘겨주는 데이터를 URL 에서 확인할 수 없다.
//    자동 재전송이 불가능하지만 데이터의 크기에 제한이 없고 보안이 get 보다는 뛰어나다.

// textarea, password, file 이 3가지 중 하나라도 포함되어 있으면 post 방식으로 전송해야 한다.

// **폼 관련 태그
// 1. input
//    사용자의 입력을 받기 위한 컨트롤로 1종류의 타입이 있다.
//    text(기본), radio, checkbox, file, hidden, button, submit, reset, image, password, password
// 1-1. text
//      한 줄의 입력을 받기 위한 컨트롤, value 가 입력된 값이다.
// 1-2. radio, checkbox 는 하나의 그룹으로 만들기 위해서는 name 속성을 동일하게 설정해야 한다.
//      value 로 선택된 데이터를 찾을 수 있다.
// 1-3. button
//      value 를 설정하면 버튼의 텍스트가 된다.
// 1-4. submit
//      기본적으로 폼의 데이터를 action 에게 전송하는 기능을 가지고 있다.
// 1-5. reset
//      폼의 데이터를 전부 초기화하는 기능을 가지고 있는 버튼
// 1-6. password
//      비밀번호를 입력받기 위한 컨트롤
// 1-7. file
//      파일을 선택할 수 있는 버튼인데 보안 때문에 value 설정이 안 된다.
// 1-8. image
//      이미지가 첨부된 버튼
// 1-9. hidden
//      화면에 출력은 안되지만 서버에게 전송은 되는 컨트롤 (내가 입력하지 않았는데 넘어가야 하는 경우)

// 2. textarea
//    여러 줄을 입력받기 위한 컨트롤
//    여는 태그와 닫는 태그 사이를 강제로 줄 바꿈을 할 경우 커서 시작 위치가 가운데로 변한다.
// 3. select
//    여러 개의 항목 중에서 하나의 항목을 선택하도록 할 때 사용하는 컨트롤
//    select 로 만들고 각 항목은 option 으로 만든다.
// 4. label
//    문자열을 출력하기 위한 컨트롤
//    레이블과 다른 컨트롤을 for 를 이용하여 연결을 하면 모바일 페이지에서 레이블만 클릭해서 다른 컨트롤을
//    클릭한 것과 동일한 효과를 만든다.
// 5. fieldset 과 legend
//    화면에 하나로 묶어진 것처럼 선을 만들어주는 태그
//    fieldset 로 묶고 legend 로 타이틀을 설정한다.

//    입력도구들을 만들고 name 속성을 설정 해야만 서버에게 전송된다.
//    name 속성을 설정하지 않으면 서버에게 전송되지 않는다.

// radio, checkbox, selecr 의 option 을 만들 때는 반드시 value 를 설정해야 한다.
// button 이나 submit, reset 은 value가 타이틀이므로 당연히 설


package Web;

public class 필기 {

}
